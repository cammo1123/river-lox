fun catchment_area1(simulation_days, rainfall) {
	river upper_molongolo	{ area: 10sqkm, flow_days: 5, flow_shape: Shape_Linear };
	river lower_molongolo	{ area: 10sqkm, flow_days: 5, flow_shape: Shape_Linear };
	river central_molongolo	{ area: 10sqkm, flow_days: 5, flow_shape: Shape_Linear };
	river middle_molongolo	{ area: 10sqkm, flow_days: 5, flow_shape: Shape_Linear };

	dam dam_1 { out_flow: (current_volume) => { return current_volume; } };

	upper_molongolo >> central_molongolo;
	lower_molongolo >> central_molongolo;
	middle_molongolo >> upper_molongolo;
	central_molongolo >> dam_1;

	print "======   Catchment Area 1   ======";
	print "Simulated " + simulation_days + " day(s) with rainfall(mm): " + rainfall;
	print "";
	print dam_1.tree;
	print dam_1.calculate(simulation_days, rainfall);
	print "====== End Catchment Area 1 ======";
	print "";
}

fun catchment_area2(simulation_days, rainfall) {
	river upper_molongolo	{ area: 1sqm, flow_days: 2, flow_shape: Shape_LastDay };
	river central_molongolo	{ area: 1sqm, flow_days: 3, flow_shape: Shape_LastDay };
	river lower_molongolo	{ area: 1sqm, flow_days: 5, flow_shape: Shape_LastDay };

	dam dam_1 { out_flow: (current_volume) => { return 5L; } };

	upper_molongolo >> central_molongolo;
	central_molongolo >> lower_molongolo;
	lower_molongolo >> dam_1;

	print "======   Catchment Area 2   ======";
	print "Simulated " + simulation_days + " day(s) with rainfall(mm): " + rainfall;
	print "";
	print dam_1.tree;
	print dam_1.calculate(simulation_days, rainfall);
	print "====== End Catchment Area 2 ======";
	print "";
}

fun catchment_area3(simulation_days, rainfall) {
	river lower_molongolo	{ area: 1sqkm, flow_days: 2, flow_shape: Shape_LastDay };

	dam dam_1 { out_flow: (current_volume) => { return max(current_volume * 0.8, 50L); } };

	lower_molongolo >> dam_1;

	print "======   Catchment Area 3   ======";
	print "Simulated " + simulation_days + " day(s) with rainfall(mm): " + rainfall;
	print "";
	print dam_1.tree;
	print dam_1.calculate(simulation_days, rainfall);
	print "====== End Catchment Area 3 ======";
	print "";
}

fun catchment_area4() {
	river River1 {
		area: 10sqm,
		flow_days: 1,
		flow_shape: (day, maxDays) => { return 1; }
	};

	print "======   Catchment Area 4   ======";
	print "Simulated 1 day with rainfall 1mm";
	print "";
	print River1.tree;
	print River1.calculate(1, [1mm]);
	print "====== End Catchment Area 4 ======";
	print "";

}

catchment_area1(20, [10mm, 10mm, 10mm, 10mm]);
catchment_area2(20, [10mm]);
catchment_area3(20, [10mm]);
catchment_area4();